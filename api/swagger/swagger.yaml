openapi: 3.0.0
info:
  title: StretchAutoAPI
  version: 1.0.0
  description: >-
    RestAPI serving stretches, storing stretch routines, and authenticating
    stretch users. Visit the StretchAuto web application at
    http://stretch-auto.seandodson.com.
servers:
  - url: 'https://stretch-auto-api.azurewebsites.net'
    description: Production API
  - url: 'http://localhost:8000'
    description: Development API
tags:
  - name: Stretch
  - name: Authentication
  - name: Accounts
paths:
  /stretch:
    get:
      tags:
        - Stretch
      operationId: getManyStretches
      description: Retrieve multiple stretches.
      responses:
        '200':
          description: The list of stretches.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/StretchResponse'
        '500':
          description: Failed to get stretches.
      parameters:
        - name: maxAmount
          in: query
          description: The max amount of stretches to retrieve. Omit to retrieve all stretches.
          required: false
          schema:
            type: integer
  /register:
    post:
      tags:
        - Authentication
      operationId: register
      description: Register a new user.
      requestBody:
        description: New user information.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Successfully registered.
        '400':
          description: Validation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Email already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to register.
  /login:
    post:
      tags:
        - Authentication
      operationId: login
      description: Validate user credentials and get tokens.
      requestBody:
        description: User credentials.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Access and refresh tokens.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid credentials.
        '400':
          description: Validation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to login.
  /refresh:
    post:
      tags:
        - Authentication
      operationId: refresh
      description: Use a refresh token to get new tokens.
      requestBody:
        description: The user's refresh token.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshRequest'
      responses:
        '200':
          description: New tokens.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/RefreshResponse'
        '400':
          description: Invalid refresh token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to refresh.
  /logout:
    delete:
      tags:
        - Authentication
      operationId: logout
      description: Logout a user and invalidate all tokens.
      responses:
        '204':
          description: Successfully logged out.
        '401':
          description: Unauthorized request.
        '500':
          description: Failed to logout.
      security:
        - jwt: []
  /account:
    get:
      tags:
        - Accounts
      operationId: getAccount
      description: Get the account of the authenticated user.
      responses:
        '200':
          description: The user's account.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/AccountResponse'
        '401':
          description: Unauthorized request.
        '404':
          description: Account not found.
        '500':
          description: Failed to get account.
      security:
        - jwt: []
components:
  schemas:
    RegisterRequest:
      type: object
      required:
        - email
        - username
        - password
        - confirmPassword
      properties:
        email:
          type: string
        username:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    RefreshRequest:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string
    StretchResponse:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        isUnilateral:
          type: boolean
        instructions:
          type: array
          items:
            $ref: '#/components/schemas/InstructionResponse'
    InstructionResponse:
      type: object
      required:
        - order
        - content
      properties:
        order:
          type: integer
        content:
          type: string
    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    RefreshResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    AccountResponse:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        username:
          type: string
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
            message:
              type: string
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
